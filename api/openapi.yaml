openapi: 3.0.3
info:
  title: Garagify
  version: 1.0.0
  description: API
tags:
  - name: AuthController
    description: Handles Google token authentication and JWT refresh operations
  - name: ParkingSpotsController
  - name: OrganizationController
    description: Handles organization-related operations, including fetching parkings and organizations by owner id
  - name: BorrowController
  - name: LendOfferController
    description: Handles lend offers and borrows, including creation and retrieval by filters
  - name: UserController
  - name: ParkingController
paths:
  /api/v1/auth/access:
    post:
      tags:
        - AuthController
      summary: Authenticate using a Google token
      operationId: authenticateWithGoogle
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenVerificationForm'
      responses:
        '200':
          description: JWT tokens returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenDto'
  /api/v1/auth/refresh:
    post:
      tags:
        - AuthController
      summary: Refresh JWT token
      operationId: refreshToken
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenVerificationForm'
      responses:
        '200':
          description: New JWT tokens returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenDto'
  /api/v1/parkings/{parking_id}:
    get:
      operationId: getParking
      summary: Get parking by id
      tags:
        - ParkingController
      parameters:
        - in: path
          name: parking_id
          required: true
          schema:
            type: integer
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ParkingDTO'
        404:
          description: Not found
  /api/v1/parkings/{parking_id}/spots:
    get:
      operationId: getParkingSpots
      summary: Get all spots for given parking
      tags:
        - ParkingController
      parameters:
        - in: path
          name: parking_id
          required: true
          schema:
            type: integer
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ParkingSpotDTO'
  /api/v1/borrow:
    post:
      summary: Borrow a parking spot
      tags:
        - BorrowController
      description: This is a description
      operationId: createBorrow
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/BorrowForm'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BorrowDTO'
        '400':
          description: Bad request
  /api/v1/borrow/mine:
    get:
      operationId: getMyBorrows
      summary: Get all borrows for the current user (paged)
      tags:
        - BorrowController
      parameters:
        - in: query
          name: page
          schema:
            type: integer
          description: Page number (0-based)
        - in: query
          name: size
          schema:
            type: integer
          description: Page size
        - in: query
          name: sort
          schema:
            type: string
          description: Sort order (e.g., borrowTime,asc)
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BorrowListDTO'
  /api/v1/borrow/{id}:
    delete:
      tags:
        - BorrowController
      summary: Delete a borrow by its ID
      description: Deletes the borrow resource with the given UUID.
      operationId: deleteBorrow
      parameters:
        - name: id
          in: path
          description: UUID of the borrow to delete
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Borrow deleted successfully, no content returned
  /api/v1/lend-offer:
    post:
      summary: Create a lend offer
      tags:
        - LendOfferController
      description: This is a description
      operationId: createLendOffer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LendOfferPostForm'
      responses:
        200:
          description: This means its ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LendOfferDTO'
    get:
      summary: Lend offers by filters
      tags:
        - LendOfferController
      description: This is a description
      operationId: getAllLendOffers
      parameters:
        - name: page
          in: query
          required: false
          schema:
            type: integer
            minimum: 0
          description: Page number (zero-based)
        - name: size
          in: query
          required: false
          schema:
            type: integer
            minimum: 1
          description: Number of items per page
        - name: start_date
          in: query
          required: false
          schema:
            type: string
            format: date-time
          description: Start date for the date range filter (inclusive)
        - name: end_date
          in: query
          required: false
          schema:
            type: string
            format: date-time
          description: End date for the date range filter (inclusive)
        - name: owner_id
          in: query
          required: false
          schema:
            type: string
          description: The id of the owner to filter by
      responses:
        200:
          description: This means its ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LendOfferListDTO'
  /api/v1/lend-offer/{lend_offer_id}:
    get:
      summary: Lend offer by id
      tags:
        - LendOfferController
      description: This is a description
      operationId: getLendOfferById
      parameters:
        - name: lend_offer_id
          in: path
          required: true
          description: The id of the lend offer
          schema:
            type: string
      responses:
        200:
          description: This means its ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LendOfferDTO'
    put:
      summary: Update lend offer by id
      tags:
        - LendOfferController
      description: Update an existing lend offer
      operationId: updateLendOfferById
      parameters:
        - name: lend_offer_id
          in: path
          required: true
          description: The id of the lend offer
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LendOfferPutForm'
      responses:
        200:
          description: Successfully updated lend offer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LendOfferDTO'
        400:
          description: Invalid input
        404:
          description: Lend offer not found
    delete:
      summary: Lend offer by id
      tags:
        - LendOfferController
      description: This is a description
      operationId: deleteLendOfferById
      parameters:
        - name: lend_offer_id
          in: path
          required: true
          description: The id of the lend offer
          schema:
            type: string
      responses:
        200:
          description: This means its ok
components:
  schemas:
    TokenVerificationForm:
      type: object
      properties:
        token:
          type: string
      required:
        - token
    TokenDto:
      type: object
      properties:
        access:
          type: string
        refresh:
          type: string
      required:
        - access
        - refresh
    BorrowDTO:
      description: This is the borrow model
      type: object
      properties:
        id:
          description: Id of borrow
          type: string
        start_date:
          description: Start date of borrow
          type: string
          format: date-time
        end_date:
          description: End date of borrow
          type: string
          format: date-time
        spot_id:
          description: Id of parking spot
          type: string
        borrower_id:
          description: Id of user
          type: string
        owner_id:
          description: Id of user
          type: string
    BorrowForm:
      type: object
      properties:
        spotId:
          type: string
          format: uuid
        startDate:
          type: string
          format: date-time
        endDate:
          type: string
          format: date-time
      required:
        - spotId
        - startDate
        - endDate
    LendOfferDTO:
      description: This is the lend offer model
      type: object
      properties:
        id:
          description: Id of lend offer
          type: string
        start_date:
          description: Start date of lend offer
          type: string
          format: date-time
        end_date:
          description: End date of lend offer
          type: string
          format: date-time
        spot_id:
          description: Id of parking spot
          type: string
        owner_id:
          description: Id of user
          type: string
    LendOfferPutForm:
      description: This is the lend offer put model
      type: object
      properties:
        start_date:
          description: Start date of lend offer
          type: string
          format: date-time
        end_date:
          description: End date of lend offer
          type: string
          format: date-time
        spot_id:
          description: Id of parking spot
          type: string
        owner_id:
          description: Id of user
          type: string
      required:
        - start_date
        - spot_id
        - end_date
    LendOfferPostForm:
      description: This is the lend offer model
      type: object
      properties:
        start_date:
          description: Start date of lend offer
          type: string
          format: date-time
        end_date:
          description: End date of lend offer
          type: string
          format: date-time
        spot_id:
          description: Id of parking spot
          type: string
      required:
        - start_date
        - spot_id
        - end_date
    ParkingDTO:
      description: This is the parking model (read-only)
      type: object
      properties:
        id:
          type: integer
          format: int32
          description: Unique parking identifier
        organisation_id:
          type: integer
          format: int32
          description: Id of the organisation (foreign key)
        name:
          type: string
          description: The name of the parking
        ui_object:
          type: object
          description: UI JSON data (arbitrary structure)
      required:
        - id
        - organisation_id
        - name
        - ui_object
    ParkingSpotDTO:
      type: object
      properties:
        id:
          type: integer
          format: int32
          description: Unique spot identifier
        parking_id:
          type: integer
          format: int32
          description: Id of the parent parking
        spot_uuid:
          type: string
          format: uuid
          description: UUID of the parking spot
        owner_id:
          type: string
          format: uuid
          description: Owner's user id (nullable if no owner)
        status:
          type: string
          description: Status of the parking spot (optional)
      required:
        - id
        - parking_id
        - spot_uuid
    LendOfferListDTO:
      allOf:
        - $ref: '#/components/schemas/PagedResponse'
        - type: object
          properties:
            content:
              type: array
              items:
                $ref: '#/components/schemas/LendOfferDTO'
    BorrowListDTO:
      allOf:
        - $ref: '#/components/schemas/PagedResponse'
        - type: object
          properties:
            content:
              type: array
              items:
                $ref: '#/components/schemas/BorrowDTO'
    PagedResponse:
      description: Generic paginated response wrapper
      type: object
      properties:
        content:
          type: array
          items: { }
          description: List of items for current page
        totalElements:
          type: integer
          format: int64
          description: Total number of elements across all pages
          example: 3
        totalPages:
          type: integer
          format: int32
          description: Total number of pages
          example: 1
        page:
          type: integer
          format: int32
          description: Current page number (0-based)
          example: 0
        size:
          type: integer
          format: int32
          description: Number of elements per page
          example: 10
      required:
        - content
        - totalElements
        - totalPages
        - page
        - size